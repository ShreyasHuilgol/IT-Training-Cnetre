@model FinalCaseStudy.Models.StudentDetail

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Edit Student Details</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.rollno,"Roll No", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.rollno, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.rollno, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Studentname,"Name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Studentname, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Studentname, "", new { @class = "text-danger" })
        </div>
    </div>

    @Html.HiddenFor(model => model.rollno)

    @*<div class="form-group">
            @Html.LabelFor(model => model.gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.gender, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.gender, "", new { @class = "text-danger" })
            </div>
        </div>*@
    <div class="form-group">
        @Html.LabelFor(model => model.gender,"Gender", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            @Html.RadioButtonFor(model => model.gender, "Male") Male<br />

            @Html.RadioButtonFor(model => model.gender, "Female") Female
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.age,"Age", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.age, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.age, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
        @Html.LabelFor(model => model.course, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.course, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.course, "", new { @class = "text-danger" })
        </div>
    </div>*@
    <div class="form-group">
        @Html.LabelFor(model => model.course,"Course", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            @Html.RadioButtonFor(model => model.course, "C#") C#<br />

            @Html.RadioButtonFor(model => model.course, "Java") Java<br />

            @Html.RadioButtonFor(model => model.course, "FxCop") FxCop<br />

            @Html.RadioButtonFor(model => model.course, "SQL") SQL
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.address,"Address", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
